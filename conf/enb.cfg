/* lteenb configuration file version 2023-12-15
 * Copyright (C) 2019-2023 Amarisoft
 * LTE cell + NR SA cell */

#define N_CELL               2
#define TDD                  0   // Values: 0 (LTE FDD), 1(LTE TDD)
#define NR_TDD               1   // Values: 0 (NR FDD), 1(NR TDD)
#define N_RB_DL              100 // Values: 25 (5MHz), 50 (10MHz), 75 (15MHz), 100 (20MHz)
#define N_ANTENNA_DL         2   // Values: 1 (SISO), 2 (MIMO 2x2)
#define NR_TDD_CONFIG        2   // Values: 1, 2, 3 or 4 (compatible with LTE TDD config 2)
#define NR_BANDWIDTH         20  // NR cell bandwidth
#define NR_LONG_PUCCH_FORMAT 2   // Values: 2, 3, 4
#define EPS_FALLBACK         0   // Values: 0 (disable EPS fallback), 1 (enable EPS fallback)

/* define to 1 to enable periodic SRS */
#define USE_SRS             0

{
  //log_options: "all.level=debug,all.max_size=1",
  log_options: "all.level=error,all.max_size=0,nas.level=debug,nas.max_size=1,ngap.level=debug,ngap.max_size=1,s1ap.level=debug,s1ap.max_size=1,rrc.level=debug,rrc.max_size=1",

  log_filename: "/tmp/gnb0.log",

  /* Enable remote API and Web interface */
  com_addr: "[::]:9001",

  /* RF driver configuration */
  include "rf_driver/config.cfg",

  mme_list: [ 
    { 
      /* address of MME for S1AP connection. Must be modified if the MME
         runs on a different host. */
      mme_addr: "127.0.1.100",
    },
  ],

  /* 5GC for NR SA cell*/
  amf_list: [
    {
      /* address of AMF for NGAP connection. Must be modified if the AMF runs on a different host. */
      amf_addr: "127.0.1.100",
    },
  ],

  /* GTP bind address (=address of the ethernet interface connected to
     the MME/5GC). Must be modified if the core network runs on a different host. */
  gtp_addr: "127.0.1.1",
#ifdef GTP_U_BUNDLING
  gtp_use_packet_bundling: true,
#endif

  /* high 20 bits of SIB1.cellIdentifier */
  enb_id: 0x1A2D0,

  gnb_id_bits: 28,
  gnb_id: 0x12345,

  en_dc_support: true,

  /* list of LTE cells */
  cell_list: [
  {
    rf_port: 0,
    /* Broadcasted PLMN identities */
    plmn_list: [
      "00101", 
    ],
#if TDD == 1
    dl_earfcn: 40620, /* 2593 MHz (band 41) */
#else
    dl_earfcn: 300,   /* DL center frequency: 2140 MHz (Band 1) */
#endif    
    n_id_cell: 1,
    cell_id: 0x01,
    tac: 0x0001,
    root_sequence_index: 120, /* PRACH root sequence index */
    //ignore_ue_as_release: true,

    //cell_barred: true,

    ncell_list: [ 
    {
      rat: "nr", 
      cell_id: 0x02,
    } 
    ],
	
    /* measurement configuration */
    meas_config_desc: {
      a1_report_type: "rsrp",
      a1_rsrp: -50,
      a1_hysteresis: 10,
      a1_time_to_trigger: 320,
      a2_report_type: "rsrp",
      a2_rsrp: -80,
      a2_hysteresis: 0,
      a2_time_to_trigger: 640,
      nr_handover: {
        b1_threshold_rsrp: -80,
        hysteresis: 0,
        time_to_trigger: 100
      }
    },
    meas_gap_config: "gp0",
    ho_from_meas: true,

#if EPS_FALLBACK > 0
    eps_fallback_fast_return_preferred_method: "handover",
#endif
  }
  ], /* cell_list */

  nr_cell_list: [
  {
    rf_port: 1,
    cell_id: 0x02,
    n_id_cell: 500,
    ncell_list : [
    {
      rat: "eutra",
      n_id_cell: 1,
#if TDD == 1
      dl_earfcn: 40620, /* 2593 MHz (band 41) */
#else
      dl_earfcn: 300,   /* DL center frequency: 2140 MHz (Band 1) */
#endif    
      cell_id: 0x1a2d001,
      tac: 1,
      allowed_meas_bandwidth: 100,
      antenna_port_1: true,
#if EPS_FALLBACK > 0
      eps_fallback_target: true
#endif
    },
    ],

#if NR_TDD == 1
    band: 78,
    dl_nr_arfcn: 632628,  /* 3489.42 MHz */
#else
    band: 5,
    dl_nr_arfcn: 176300,  /* 881.5 MHz */
#endif

    /* measurement configuration */
    meas_config_desc: {
      a1_report_type: "rsrp",
      a1_rsrp: -50,
      a1_hysteresis: 3,
      a1_time_to_trigger: 320,
      a2_report_type: "rsrp",
      a2_rsrp: -80,
      a2_hysteresis: 3,
      a2_time_to_trigger: 640,
      eutra_handover: {
        b1_threshold_rsrp: -90,
        hysteresis: 0,
        time_to_trigger: 256,
      }
    },
    ho_from_meas: true,
    meas_gap_config: {
      pattern_id: 0,
    },
#if EPS_FALLBACK > 0
    eps_fallback_preferred_method: "handover",
#endif
  },
  ], /* nr_cell_list */

/* default LTE cell parameters */
  cell_default: {
    n_antenna_dl: N_ANTENNA_DL, /* number of DL antennas */
    n_antenna_ul: 1, /* number of UL antennas */
    
#if TDD == 1
    uldl_config: 2, /* TDD only */
    sp_config: 7, /* TDD only */
#endif

    n_rb_dl: N_RB_DL, /* Bandwidth: 25: 5 MHz, 50: 10 MHz, 75: 15 MHz, 100: 20 MHz */
    cyclic_prefix: "normal",

    phich_duration: "normal",
    phich_resource: "1", /* ratio of NG */

    /* SIB1 */
    si_value_tag: 0, /* increment modulo 32 if SI is modified */
    cell_barred: false, /* SIB1.cellBarred-r13 */
    intra_freq_reselection: true, /* SIB1.intraFreqReselection */
    q_rx_lev_min: -70, /* SIB1.q-RxLevMin */
    p_max: 10, /* maximum power allowed for the UE (dBm) */
    si_window_length: 40, /* ms */
    sib_sched_list: [ 
      {
        filename: "sib2_3.asn",
        si_periodicity: 16, /* frames */
      },
      /*{
        filename: "sib24.asn",
        si_periodicity: 16
      }*/
    ],

#if N_RB_DL == 6
    si_coderate: 0.30,   /* maximum code rate for SI/RA/P-RNTI messages */
#else
    si_coderate: 0.20,   /* maximum code rate for SI/RA/P-RNTI messages */
#endif
    si_pdcch_format: 2, /* 2 or 3. Log2 of the number of CCEs for PDCCH
                           for SI/RA/P-RNTI */

    n_symb_cch: 0, /* number of symbols for CCH (0 = auto) */

    /* PDSCH dedicated config (currently same for all UEs) */
    pdsch_dedicated: {
#if N_ANTENNA_DL >= 4
      p_a: -6,
#elif N_ANTENNA_DL == 2
      p_a: -3,
#else
      p_a: 0,
#endif
      p_b: -1, /* -1 means automatic */
    },

    /* If defined, force for number of CCEs for UE specific PDCCH to
       2^pdcch_format. Otherwise it is computed from the reported
       CQI. Range: 0 to 3. */
    /* pdcch_format: 2,  */

    /* if defined, force the PDSCH MCS for all UEs. Otherwise it is
       computed from the reported CQI */ 
    /* pdsch_mcs: 12, */

#if N_RB_DL == 6
    prach_config_index: 15, /* subframe 9 every 20 ms */
#else
    prach_config_index: 4, /* subframe 4 every 10 ms */
#endif
    prach_freq_offset: -1, /* -1 means automatic */

    /* PUCCH dedicated config (currently same for all UEs) */
    pucch_dedicated: {
      n1_pucch_sr_count: 11, /* increase if more UEs are needed */
      cqi_pucch_n_rb: 1, /* increase if more UEs are needed */
#if TDD == 1
      //tdd_ack_nack_feedback_mode: "bundling", /* TDD only */
      tdd_ack_nack_feedback_mode: "multiplexing", /* TDD only */
#endif
    },

    /* PUSCH dedicated config (currently same for all UEs) */
    pusch_dedicated: {
      beta_offset_ack_index: 9,
      beta_offset_ri_index: 6,
      beta_offset_cqi_index: 6,
    },

    pusch_hopping_offset: -1, /* -1 means automatic */

    /* MCS for Msg3 (=CCCH RRC Connection Request) */
    pusch_msg3_mcs: 0,

    /* this CQI value is assumed when none is received from the UE */
#if N_RB_DL == 6
    initial_cqi: 5,
#else
    initial_cqi: 3,
#endif

    /* if defined, force the PUSCH MCS for all UEs. Otherwise it is
       computed from the last received SRS/PUSCH. */ 
    //  pusch_mcs: 18, 

    dl_256qam: true,
    ul_64qam: true,

    /* Scheduling request period (ms). Must be >= 40 for HD-FDD */
    sr_period: 20, 

    /* CQI report config */
    cqi_period: 40, /* period (ms). Must be >= 32 for HD-FDD */

#if N_ANTENNA_DL >= 2
    /* RI reporting is done with a period of m_ri * cqi_period. 
       m_ri = 0 (default) disables RI reporting. */
    m_ri: 8,
    /* transmission mode */
    transmission_mode: 3,
#endif

    /* SRS dedicated config. All UEs share these
       parameters. srs_config_index and freq_domain_position are
       allocated for each UE) */ 
    srs_dedicated: {
#if N_RB_DL == 6
      srs_bandwidth_config: 7,
      srs_bandwidth: 1,
#elif N_RB_DL == 15
      srs_bandwidth_config: 6,
      srs_bandwidth: 1,
#elif N_RB_DL == 25
      srs_bandwidth_config: 3,
      srs_bandwidth: 1,
#elif N_RB_DL == 50
      srs_bandwidth_config: 2,
      srs_bandwidth: 2,
#elif N_RB_DL == 75
      srs_bandwidth_config: 2,
      srs_bandwidth: 2,
#else
      srs_bandwidth_config: 2,
      srs_bandwidth: 3,
#endif
      srs_subframe_config: 3, /* 0 - 15 */
      srs_period: 40, /* period (ms). Must be >= 40 for HD-FDD */
      srs_hopping_bandwidth: 0,
    },

    /* MAC configuration (same for all UEs) */
    mac_config: {
       ul_max_harq_tx: 5, /* max number of HARQ transmissions for uplink */
       dl_max_harq_tx: 5, /* max number of HARQ transmissions for downlink */
    },

    /* CPU load limitation */
    pusch_max_its: 6, /* max number of turbo decoder iterations */

    /* dynamic power control */
    dpc: true,
    dpc_pusch_snr_target: 25,
    dpc_pucch_snr_target: 20,

    /* RRC/UP ciphering algorithm preference. EEA0 is always the last. */
    cipher_algo_pref: [],
    /* RRC integrity algorithm preference. EIA0 is always the last. */
    integ_algo_pref: [2, 1],

    /* (in ms) send RRC connection release after this time of network
       inactivity */ 
    inactivity_timer: 10000,

    /* SRB configuration */
    srb_config: [
      {
        id: 1,
        maxRetxThreshold: 32,
        t_Reordering: 45,
        t_PollRetransmit: 60,
      },
      {
        id: 2 ,
        maxRetxThreshold: 32,
        t_Reordering: 45,
        t_PollRetransmit: 60,
      }
    ],
    /* DRB configuration */
    drb_config: "drb.cfg",

  },

  nr_cell_default: {
#if NR_TDD == 1
    subcarrier_spacing: 30, /* kHz */
#else
    subcarrier_spacing: 15, /* kHz */
#endif
    bandwidth: NR_BANDWIDTH, /* MHz */
    n_antenna_dl: N_ANTENNA_DL,
    n_antenna_ul: 1,

    /* force the timing TA offset (optional) */
//    n_timing_advance_offset: 39936,

#if NR_TDD == 1
    tdd_ul_dl_config: {
      pattern1: {
#if NR_TDD_CONFIG == 1
        period: 5, /* in ms */
        dl_slots: 7,
        dl_symbols: /* 6 */ 2,
        ul_slots: 2,
        ul_symbols: 2,
#elif NR_TDD_CONFIG == 2
        period: 5, /* in ms */
        dl_slots: 7,
        dl_symbols: 6,
        ul_slots: 2,
        ul_symbols: 4,
#elif NR_TDD_CONFIG == 3
        period: 5, /* in ms */
        dl_slots: 6,
        dl_symbols: 2,
        ul_slots: 3,
        ul_symbols: 2,
#elif NR_TDD_CONFIG == 4
        period: 3, /* in ms */
        dl_slots: 3,
        dl_symbols: 6,
        ul_symbols: 4,
        ul_slots: 2,
      },
      pattern2: {
        period: 2, /* in ms */
        dl_slots: 4,
        dl_symbols: 0,
        ul_symbols: 0,
        ul_slots: 0,
#endif
      },
    },
    ssb_pos_bitmap: "10000000",
#else
    ssb_pos_bitmap: "1000",
#endif
    ssb_period: 20, /* in ms */
    n_id_cell: 500,

    plmn_list: [ {
      tac: 100,
      plmn: "00101",
      reserved: false,
      nssai: [
        {
         sst: 1,
        },
        {
         sst: 2,
        },
        /*{
         sst: 3,
         sd: 50,
        },*/
       ],
      },
    ],

    /*sib_sched_list: [
      {
        filename: "sib2_nr.asn",
        si_periodicity: 16,
      },
      {
        filename: "sib5_nr.asn",
        si_periodicity: 16,
      },
    ],*/
    si_window_length: 40,

    cell_barred: false,
    intra_freq_reselection: true,
    q_rx_lev_min: -70,
    q_qual_min: -20,
    //p_max: 10, /* dBm */

    root_sequence_index: 1, /* PRACH root sequence index */

    /* Scheduling request period (slots). */
    sr_period: 40,

    dmrs_type_a_pos: 2,

    /* to limit the number of HARQ feedback in UL, use pdsch_harq_ack_max;
       allows to workaround issues with SM-G977N for example */
    //pdsch_harq_ack_max: 2,

    prach: {
#if NR_TDD == 1
#if NR_TDD_CONFIG == 4
      prach_config_index: 156, /* format B4, subframe 2 */
#else
      prach_config_index: 160, /* format B4, subframe 9 */
#endif
      msg1_subcarrier_spacing: 30, /* kHz */
#else
      prach_config_index: 16, /* subframe 1 every frame */
#endif
      msg1_fdm: 1,
      msg1_frequency_start: -1,
      zero_correlation_zone_config: 15,
      preamble_received_target_power: -110, /* in dBm */
      preamble_trans_max: 7,
      power_ramping_step: 4, /* in dB */
#if NR_TDD == 1
      ra_response_window: 20, /* in slots */
#else
      ra_response_window: 10, /* in slots */
#endif
      restricted_set_config: "unrestricted_set",
      ra_contention_resolution_timer: 64, /* in ms */
      ssb_per_prach_occasion: 1,
      cb_preambles_per_ssb: 8,
    },

    pdcch: {
      n_rb_coreset0: 48,
      n_symb_coreset0: 1,
      search_space0_index: 0,

      dedicated_coreset: {
        rb_start: -1, /* -1 to have the maximum bandwidth */
        l_crb: -1, /* -1 means all the bandwidth */
        duration: 1,
        precoder_granularity: "sameAsREG_bundle",
      },

      css: {
        n_candidates: [ 0, 0, 4, 0, 0 ],
      },
      rar_al_index: 2,
      si_al_index: 2,

      uss: {
        n_candidates: [ 0, 4, 0, 0, 0 ],
        dci_0_1_and_1_1: true,
      },
      al_index: 1,
    },

    pdsch: {
      mapping_type: "typeA",
      dmrs_add_pos: 1,
      dmrs_type: 1,
      dmrs_max_len: 1,
      /* k0 delay in slots from DCI to PDSCH: automatic setting */
      /* k1 delay in slots from PDSCH to PUCCH/PUSCH ACK/NACK: automatic setting */
      mcs_table: "qam256",

      rar_mcs: 2,
      si_mcs: 6,
      /* If defined, force the PDSCH MCS for all UEs. Otherwise it is computed
       * based on DL channel quality estimation */
      /* mcs: 24, */
    },
    
    csi_rs: {
      resource_auto: {
        nzp_csi_rs_period: 80,
      },
      csi_report_config: [
        {
          report_config_type: "periodic",
          period: 80,
        },
      ],
    },
    
    pucch: {
      pucch_group_hopping: "neither",
      hopping_id: -1, /* -1 = n_cell_id */
      p0_nominal: -96,
#if 0
        pucch0: {
          initial_cyclic_shift: 1,
          n_symb: 1,
        },
#else
        pucch1: {
          n_cs: 3,
          n_occ: 3,
          freq_hopping: true,
        },
#endif
#if NR_LONG_PUCCH_FORMAT == 2
        pucch2: {
          n_symb: 2,
          n_prb: 1,
          freq_hopping: true,
          simultaneous_harq_ack_csi: false,
          max_code_rate: 0.25,
        },
#elif NR_LONG_PUCCH_FORMAT == 3
        pucch3: {
          bpsk: false,
          additional_dmrs: false,
          freq_hopping: true,
          n_prb: 1,
          simultaneous_harq_ack_csi: true,
          max_code_rate: 0.25,
        },
#elif NR_LONG_PUCCH_FORMAT == 4
        pucch4: {
          occ_len: 4,
          bpsk: false,
          additional_dmrs: false,
          freq_hopping: true,
          simultaneous_harq_ack_csi: true,
          max_code_rate: 0.25,
        },
#endif
    },

#if USE_SRS
    srs: {
#if NR_TDD_CONFIG == 1 || NR_TDD_CONFIG == 2
      srs_symbols: [ 0, 0, 0, 0, 0, 0, 0, 2, 0, 0 ],
#elif NR_TDD_CONFIG == 3
      srs_symbols: [ 0, 0, 0, 0, 0, 0, 2, 0, 0, 0 ],
#elif NR_TDD_CONFIG == 4
      srs_symbols: [ 0, 0, 0, 4, 0, 0, 0, 0, 0, 0 ],
#endif
      srs_resource: [
        {
          srs_resource_id: 0,
          n_ports: 1,
          resource_type: "periodic",
          period: 80, /* in slots */
        }
      ],
      srs_resource_set: [
        {
          srs_resource_id_list: [ 0 ],
        },
      ],
    },
#endif

    pusch: {
      mapping_type: "typeA",
      n_symb: 14,
      dmrs_add_pos: 1,
      dmrs_type: 1,
      dmrs_max_len: 1,
      tf_precoding: false,
      mcs_table: "qam256", /* without transform precoding */
      mcs_table_tp: "qam256", /* with transform precoding */
      ldpc_max_its: 5,
      /* k2, msg3_k2 delay in slots from DCI to PUSCH: automatic setting */
      p0_nominal_with_grant: -84,
      msg3_mcs: 4,
      msg3_delta_power: 0, /* in dB */
      beta_offset_ack_index: 9,

      /* if defined, force the PUSCH MCS for all UEs. Otherwise it is
       computed from the last received PUSCH. */
      /* mcs: 16, */
    },

    /* MAC configuration */
    mac_config: {
      msg3_max_harq_tx: 5,
      ul_max_harq_tx: 5, /* max number of HARQ transmissions for uplink */
      dl_max_harq_tx: 5, /* max number of HARQ transmissions for downlink */
      ul_max_consecutive_retx: 30, /* disconnect UE if reached */
      dl_max_consecutive_retx: 30, /* disconnect UE if reached */
      periodic_bsr_timer: 20,
      retx_bsr_timer: 320,
      periodic_phr_timer: 500,
      prohibit_phr_timer: 200,
      phr_tx_power_factor_change: "dB3",
      sr_prohibit_timer: 0, /* in ms, 0 to disable the timer */
      sr_trans_max: 64,
    },

    cipher_algo_pref: [],
    integ_algo_pref: [2, 1],

    inactivity_timer: 10000,

    drb_config: "drb_nr.cfg",
  },
}

